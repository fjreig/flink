services:
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:latest
    container_name: redpanda
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
    ports:
      - 18081:8081
      - 18082:8082
      - 19092:9092
      - 19644:9644
    volumes:
      - redpanda:/var/lib/redpanda/data
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s

  console:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: console
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
        connect:
          enabled: true
          clusters:
            - name: local-connect-cluster
              url: http://connect:8083
    ports:
      - 8080:8080
    depends_on:
      - redpanda

  flink-jobmanager:
    container_name: jobmanager
    build:
      context: ./pyflink
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
    command: jobmanager
    volumes:
      - ./pyflink/usr_jobs:/opt/flink/usr_jobs
    env_file:
      - .env
    depends_on:
      - redpanda

  flink-taskmanager:
    container_name: taskmanager
    build:
      context: ./pyflink
      dockerfile: Dockerfile
    depends_on:
      - flink-jobmanager
    command: taskmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 2
    volumes:
      - ./pyflink/usr_jobs:/opt/flink/usr_jobs
    env_file:
      - .env
  
  postgres:
    image: postgres:latest
    container_name: postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
  
  mongo:
    image: mongo
    container_name: mongo
    env_file:
      - .env

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - 8082:8081
    env_file:
      - .env

volumes:
  redpanda: null